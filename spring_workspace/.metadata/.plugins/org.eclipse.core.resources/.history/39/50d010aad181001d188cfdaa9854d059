<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ezen.myProject.repository.BoardDAO">
	<insert id="insertBoard" parameterType="com.ezen.myProject.domain.BoardVO">
		insert into board(title, writer, content) values(#{title}, #{writer}, #{content})
	</insert>
	<select id="selectBoardList" resultType="com.ezen.myProject.domain.BoardVO">
		select * from board where isDel="N" order by bno desc
	</select>
	<select id="selectBoardDetail" resultType="com.ezen.myProject.domain.BoardVO">
		select * from board where bno=#{bno}
	</select>
	<update id="updateReadCount">
		update board set read_count=read_count+1 where bno=#{bno}
	</update>
	<update id="updateBoard">
		update board set title=#{title}, content=#{content}, registerDate=now() where bno=#{bno}
	</update>
	<update id="deleteBoard">
		update board set isDel='Y' where bno=#{bno}
	</update>
	<select id="selectListCount" resultType="int">
		select count(bno) from board where isDel="N"
		<include refid="search"></include>
	</select>
	
	<!-- 원래 페이징 처리 -->
<!-- 	<select id="selectBoardListPaging" resultType="com.ezen.myProject.domain.BoardVO">
		select * from board where isDel="N" order by bno desc limit #{pageStart}, #{qty} 
	</select> -->
	
	<!-- 검색 포함한 페이징 처리 -->
	<select id="selectBoardListPaging" resultType="com.ezen.myProject.domain.BoardVO">
		select * from board where isDel="N" 
		<include refid="search"></include>
		order by bno desc limit #{pageStart}, #{qty} 
	</select>
	
	<!-- 
		select * from board where isDel="N" and (title like "%t%") order by bno desc limit #{pageStart}, #{qty} ;
	 	형식으로 구문 작성하기 위해서
	 -->
	
	<sql id="search">
		<if test="type != null">
			<trim prefix="and (" suffix=")" prefixOverrides="OR">
				<foreach collection="typeToArray" item="type">
					<trim prefix="OR">
						<choose>
							<when test="type == 't'.toString()">
								title like concat("%", #{keyword}, "%")
							</when>
							<when test="type == 'c'.toString()">
								content like concat("%", #{keyword}, "%")
							</when>
							<when test="type == 'w'.toString()">
								writer like concat("%", #{keyword}, "%")
							</when>
						</choose>
					</trim>
				</foreach>
			</trim>
		</if>
	</sql>
	
</mapper>

